services:
  zookeeper:
    image: wurstmeister/zookeeper
    networks:
      - kafka-network
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    networks:
      - kafka-network
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--list", "--bootstrap-server", "localhost:9092"]
      interval: 10s
      timeout: 5s
      retries: 5

  producer:
    build: .
    image: producer-image
    networks:
      - kafka-network
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092 

  postgres:
    image: postgres:latest
    networks:
      - kafka-network
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: weather_db
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./postgres-config:/etc/postgresql
    command: postgres -c listen_addresses='*'

networks:
  kafka-network:
    driver: bridge

volumes:
  postgres-data: